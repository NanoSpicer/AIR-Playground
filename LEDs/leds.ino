/**
 * 



Encoding  : UNKNOWN
Code      : CE1972FD (32 bits)
Timing[67]: 
     +8800, -4500     + 500, - 650     + 500, - 600     + 500, - 600
     + 450, - 650     + 500, - 600     + 550, - 550     + 500, - 650
     + 500, - 550     + 550, -1700     + 500, -1700     + 500, -1700
     + 550, -1700     + 500, - 600     + 500, -1700     + 500, -1700
     + 500, -1700     + 550, -1700     + 500, -1700     + 500, - 600
     + 550, - 550     + 550, - 600     + 450, - 650     + 500, - 600
     + 500, - 600     + 450, - 650     + 500, - 600     + 550, -1700
     + 500, -1700     + 450, -1750     + 500, -1750     + 500, -1700
     + 450, -1750     + 500
unsigned int  rawData[67] = {8800,4500, 500,650, 500,600, 500,600, 450,650, 500,600, 550,550, 500,650, 500,550, 550,1700, 500,1700, 500,1700, 550,1700, 500,600, 500,1700, 500,1700, 500,1700, 550,1700, 500,1700, 500,600, 550,550, 550,600, 450,650, 500,600, 500,600, 450,650, 500,600, 550,1700, 500,1700, 450,1750, 500,1750, 500,1700, 450,1750, 500};  // UNKNOWN CE1972FD

Encoding  : UNKNOWN
Code      : D4DD0381 (32 bits)
Timing[67]: 
     +8850, -4450     + 500, - 650     + 500, - 600     + 550, - 550
     + 500, - 600     + 550, - 550     + 550, - 550     + 500, - 650
     + 500, - 550     + 600, -1650     + 550, -1650     + 500, -1700
     + 550, -1700     + 500, - 600     + 550, -1650     + 550, -1650
     + 500, -1750     + 550, - 550     + 500, -1700     + 550, - 550
     + 500, - 650     + 500, - 550     + 550, - 600     + 500, - 600
     + 550, - 550     + 550, -1650     + 550, - 550     + 550, -1700
     + 500, -1700     + 500, -1700     + 550, -1700     + 500, -1700
     + 450, -1750     + 500
unsigned int  rawData[67] = {8850,4450, 500,650, 500,600, 550,550, 500,600, 550,550, 550,550, 500,650, 500,550, 600,1650, 550,1650, 500,1700, 550,1700, 500,600, 550,1650, 550,1650, 500,1750, 550,550, 500,1700, 550,550, 500,650, 500,550, 550,600, 500,600, 550,550, 550,1650, 550,550, 550,1700, 500,1700, 500,1700, 550,1700, 500,1700, 450,1750, 500};  // UNKNOWN D4DD0381

 */

#include <IRremote.h>

#define OFF 0
#define ON  1

unsigned int ONrawData[67] = {8800, 4500, 500, 650, 500, 600, 500, 600, 450, 650, 500, 600, 550, 550, 500, 650, 500, 550, 550, 1700, 500, 1700, 500, 1700, 550, 1700, 500, 600, 500, 1700, 500, 1700, 500, 1700, 550, 1700, 500, 1700, 500, 600, 550, 550, 550, 600, 450, 650, 500, 600, 500, 600, 450, 650, 500, 600, 550, 1700, 500, 1700, 450, 1750, 500, 1750, 500, 1700, 450, 1750, 500};    // UNKNOWN CE1972FD
unsigned int OFFrawData[67] = {8850, 4450, 500, 650, 500, 600, 550, 550, 500, 600, 550, 550, 550, 550, 500, 650, 500, 550, 600, 1650, 550, 1650, 500, 1700, 550, 1700, 500, 600, 550, 1650, 550, 1650, 500, 1750, 550, 550, 500, 1700, 550, 550, 500, 650, 500, 550, 550, 600, 500, 600, 550, 550, 550, 1650, 550, 550, 550, 1700, 500, 1700, 500, 1700, 550, 1700, 500, 1700, 450, 1750, 500}; // UNKNOWN D4DD0381

IRsend sender;
unsigned int LED_STATE = OFF;

void setup() {
    Serial.begin(9600);
}

void loop() {
    Serial.println("Loop");
    switch(LED_STATE) {
        case  ON: sendRawSignal(ONrawData, 38);  break;
        case OFF: sendRawSignal(OFFrawData, 38); break;
        default: break;
    }

    // Toggle it
    LED_STATE = LED_STATE == ON ? OFF : ON;
    delay(5000);
}


void sendRawSignal(unsigned int irSignal[],  int kHz) {
    Serial.println("Sending raw signal");
    auto length = 67;
    Serial.println(length);
    sender.sendRaw(irSignal, length, kHz);
}